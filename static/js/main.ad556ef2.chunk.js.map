{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getPosts","fetch","then","response","json","result","data","getPostDetails","selectedPostId","PostsList","onTakePost","searchByUser","useState","posts","setPosts","viewDetails","setViewDetails","useEffect","filter","item","userId","className","map","key","id","title","type","classNames","PostsList__button","button","onClick","defaultProps","request","path","options","getPostComments","resultArr","postId","NewCommentForm","newRenderOfComments","userName","setUserName","userEmail","setUserEmail","comment","setComment","addNewComment","a","name","email","body","method","JSON","stringify","onSubmit","event","preventDefault","placeholder","value","onChange","target","trimLeft","required","PostDetails","postComments","setPostComments","selectedPost","setSelectedPost","hideComments","setHideComments","handleDelete","length","App","setSelecteUserId","setSelecteUser","setSearchByUser","post","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad556ef2.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getPosts = () => fetch(`${BASE_URL}/posts`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import { BASE_URL } from './api';\n\nexport const getUserPost = selectedPostId => fetch(`${BASE_URL}/comments`)\n  .then(response => response.json())\n  .then(result => result.data)\n  .then(resultArr => resultArr.filter(\n    item => item.postId && (item.body.trim() !== ''),\n  ))\n  .then(resultFiltered => resultFiltered.filter(\n    item => item.postId === selectedPostId,\n  ));\n\nexport const getPostDetails = selectedPostId => fetch(\n  `${BASE_URL}/posts/${selectedPostId}`,\n)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getPosts } from '../../api/api';\nimport { getPostDetails } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ onTakePost, searchByUser }) => {\n  const [posts, setPosts] = useState([]);\n  const [viewDetails, setViewDetails] = useState(0);\n\n  useEffect(() => {\n    if (+searchByUser === 0) {\n      getPosts()\n        .then(setPosts);\n\n      return;\n    }\n\n    getPosts()\n      .then(result => result.filter(item => item.userId === +searchByUser))\n      .then(setPosts);\n  }, [searchByUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(item => (\n          <li className=\"PostsList__item\" key={item.id}>\n            <div>\n              <b>\n                {`[User ${item.userId}]:`}\n                {' '}\n              </b>\n              {item.title}\n            </div>\n            <button\n              type=\"button\"\n              className={classNames({\n                PostsList__button: true,\n                button: true,\n              })}\n              onClick={() => {\n                if (viewDetails === item.id) {\n                  onTakePost(null, null);\n                  setViewDetails(null);\n\n                  return;\n                }\n\n                getPostDetails(item.id);\n                setViewDetails(item.id);\n                onTakePost(item.id, item);\n              }}\n            >\n              {\n                viewDetails === item.id\n                  ? 'Close'\n                  : 'Open'\n              }\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  onTakePost: PropTypes.func.isRequired,\n  searchByUser: PropTypes.number,\n};\n\nPostsList.defaultProps = {\n  searchByUser: 0,\n};\n","import { BASE_URL } from './api';\n\nexport const request = (path, options) => fetch(`${BASE_URL}${path}`, options)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getPostComments = selectedPostId => request('/comments')\n  .then(resultArr => resultArr.filter(\n    item => item.postId === selectedPostId,\n  ));\n\nexport const deleteComment = commentId => request(`/comments/${commentId}`, {\n  method: 'DELETE',\n});\n\nexport const addComment = (postId, name, email, body) => request(`/comments`, {\n  method: 'POST',\n  body: JSON.stringify({\n    postId,\n    name,\n    email,\n    body,\n  }),\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPostId, newRenderOfComments }) => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const addNewComment = async() => {\n    await addComment(selectedPostId, userName, userEmail, comment);\n    newRenderOfComments(selectedPostId);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addNewComment();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={userName}\n          onChange={({ target }) => setUserName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={userEmail}\n          onChange={({ target }) => setUserEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value.trimLeft())}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  newRenderOfComments: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [postComments, setPostComments] = useState(null);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [hideComments, setHideComments] = useState(false);\n\n  const handleDelete = async(id) => {\n    await deleteComment(id);\n    getPostComments(selectedPostId)\n      .then(setPostComments);\n  };\n\n  const newRenderOfComments = () => {\n    getPostComments(selectedPostId)\n      .then(setPostComments);\n  };\n\n  useEffect(() => {\n    getPostComments(selectedPostId)\n      .then(setPostComments);\n\n    getPostDetails(selectedPostId)\n      .then(setSelectedPost);\n  }, [selectedPostId]);\n\n  if (!selectedPost || !postComments) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <h3>{selectedPost.title}</h3>\n        <p>{selectedPost.body}</p>\n\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className={classNames({\n            button: true,\n            'button--visibility': !postComments.length,\n          })}\n          onClick={() => setHideComments(!hideComments)}\n\n        >\n          {\n            hideComments\n              ? `Show ${postComments.length} comments`\n              : `Hide ${postComments.length} comments`\n          }\n        </button>\n\n        {\n          hideComments\n          || (\n            <ul className=\"PostDetails__list\">\n              {postComments.map(item => (\n                <li className=\"PostDetails__list-item\" key={item.id}>\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => handleDelete(item.id)}\n                  >\n                    X\n                  </button>\n                  <p>{item.body}</p>\n                </li>\n              ))}\n            </ul>\n          )\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            newRenderOfComments={newRenderOfComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedPostId, setSelecteUserId] = useState(null);\n  const [selectedPost, setSelecteUser] = useState(null);\n  const [searchByUser, setSearchByUser] = useState(0);\n\n  const getPost = (userId, post) => {\n    setSelecteUserId(userId);\n    setSelecteUser(post);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={searchByUser}\n            onChange={({ target }) => setSearchByUser(target.value)}\n          >\n            <option\n              value={0}\n            >\n              All users\n            </option>\n\n            <option\n              value={1}\n            >\n              Leanne Graham\n            </option>\n\n            <option\n              value={2}\n            >\n              Ervin Howell\n            </option>\n\n            <option\n              value={3}\n            >\n              Clementine Bauch\n            </option>\n\n            <option\n              value={4}\n            >\n              Patricia Lebsack\n            </option>\n\n            <option\n              value={5}\n            >\n              Chelsey Dietrich\n            </option>\n\n            <option\n              value={6}\n            >\n              Mrs. Dennis Schulist\n            </option>\n\n            <option\n              value={7}\n            >\n              Kurtis Weissnat\n            </option>\n\n            <option\n              value={8}\n            >\n              Nicholas Runolfsdottir V\n            </option>\n\n            <option\n              value={9}\n            >\n              Glenna Reichert\n            </option>\n\n            <option\n              value={10}\n            >\n              Leanne Graham\n            </option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            onTakePost={getPost}\n            searchByUser={searchByUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            !selectedPostId\n            || (\n              <PostDetails\n                selectedPostId={selectedPostId}\n                selectedPost={selectedPost}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}